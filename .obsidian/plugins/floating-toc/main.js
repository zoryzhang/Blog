/*
	This is the Obsidian example vault is amazing, there are a lot of dazzling features and showcase, I believe you will wonder a bit, is this Obsidian?
	[Blue-topaz-examples](https://github.com/cumany/Blue-topaz-examples)
	*/

var me=Object.create;var k=Object.defineProperty;var be=Object.getOwnPropertyDescriptor;var Ce=Object.getOwnPropertyNames;var ve=Object.getPrototypeOf,ye=Object.prototype.hasOwnProperty;var z=o=>k(o,"__esModule",{value:!0});var Se=(o,e)=>{z(o);for(var l in e)k(o,l,{get:e[l],enumerable:!0})},we=(o,e,l)=>{if(e&&typeof e=="object"||typeof e=="function")for(let c of Ce(e))!ye.call(o,c)&&c!=="default"&&k(o,c,{get:()=>e[c],enumerable:!(l=be(e,c))||l.enumerable});return o},H=o=>we(z(k(o!=null?me(ve(o)):{},"default",o&&o.__esModule&&"default"in o?{get:()=>o.default,enumerable:!0}:{value:o,enumerable:!0})),o);var w=(o,e,l)=>new Promise((c,d)=>{var a=i=>{try{n(l.next(i))}catch(s){d(s)}},t=i=>{try{n(l.throw(i))}catch(s){d(s)}},n=i=>i.done?c(i.value):Promise.resolve(i.value).then(a,t);n((l=l.apply(o,e)).next())});Se(exports,{default:()=>N,refresh_node:()=>fe,selfDestruct:()=>D});var h=H(require("obsidian"));var u=H(require("obsidian"));function O(o,e,l,c,d=null){return w(this,null,function*(){let a=/(?<=^\s*)[0-9]+\.\s/,t=/(?<=^\s*)[\-\+]\s/,n,i="";(n=a.exec(e))!==null?(i=n[0],e=e.replace(a,"")):(n=t.exec(e))!==null&&(i=n[0],e=e.replace(t,""));let s=l;yield u.MarkdownRenderer.renderMarkdown(e,s,c,d);let f=s.createEl("a");f.addClass("text"),f.onclick=function(g){var T;let v=(T=parseInt(s.parentElement.getAttribute("data-line")))!=null?T:0;if(g.ctrlKey||g.metaKey)Ee(o,v);else{Te(o,v);let r=s.parentElement.parentElement.querySelector(".text-wrap.located");r&&r.removeClass("located"),s.addClass("located")}};let p=s.querySelector("p");if(p){let g=/<a[^>]*>|<\/[^>]*a>/gm;i?f.innerHTML=i+p.innerHTML.replace(g,""):f.innerHTML=p.innerHTML.replace(g,""),s.removeChild(p)}})}function P(o,e,l,c){return w(this,null,function*(){let d=e.createEl("li");d.addClass("heading-list-item"),d.setAttribute("data-level",l.level.toString()),d.setAttribute("data-id",c.toString()),d.setAttribute("data-line",l.position.start.line.toString());let a=d.createEl("div");a.addClass("text-wrap"),O(o,l.heading,a,o.file.path,null);let t=d.createEl("div");t.addClass("line-wrap"),t.createDiv().addClass("line")})}var Te=(o,e)=>{o.leaf.openFile(o.file,{eState:{line:e}})},Ee=(o,e)=>{var a,t;let l=(t=(a=o==null?void 0:o.currentMode.getFoldInfo())==null?void 0:a.folds)!=null?t:[],c=e,d=0;if(l.some((n,i)=>(d=i,n.from==c)))l.splice(d,1);else{let n={from:e,to:e+1};l.push(n)}o==null||o.currentMode.applyFoldInfo({folds:l,lines:o.editor.lineCount()}),o==null||o.onMarkdownFold()};function F(o,e){var d;let l=(a,t)=>{let n=o.workspace.getActiveFile(),i=o.metadataCache.getFileCache(n).headings,s=[];if(i==null||i.map(r=>{r.heading=r.heading.replace(/<\/?[\s\S]*?(?:".*")*>/g,""),s.push(r)}),e.headingdata=s,e.headingdata.length==0)return;e.settings.positionStyle=="right"?(t.addClass("floating-right"),t.removeClass("floating-left")):e.settings.positionStyle=="left"&&(t.addClass("floating-left"),t.removeClass("floating-rigth")),e.settings.isLeft?(t.removeClass("alignLeft"),t.addClass("alignLeft")):t.removeClass("alignLeft");let f=t.createEl("ul");f.addClass("floating-toc");let p=f.createEl("div");p.addClass("toolbar"),p.addClass("pin"),p.addClass("hide"),new u.ButtonComponent(p).setIcon("pin").setTooltip("pin").onClick(()=>{t.classList.contains("pin")?t.removeClass("pin"):t.addClass("pin")}),f.onmouseenter=function(){p.removeClass("hide"),t.addClass("hover")},f.onmouseleave=function(){p.addClass("hide"),t.removeClass("hover")},new u.ButtonComponent(p).setIcon("double-up-arrow-glyph").setTooltip("Scroll to Top").setClass("top").onClick(()=>{let r=this.app.workspace.getActiveViewOfType(u.MarkdownView);r&&r.setEphemeralState({scroll:0})}),new u.ButtonComponent(p).setIcon("copy").setTooltip("copy to clipboard").setClass("copy").onClick(()=>w(this,null,function*(){let r=e.headingdata.map(E=>"    ".repeat(E.level-1)+E.heading);yield navigator.clipboard.writeText(r.join(`
`)),new u.Notice("Copied")})),e.settings.ignoreTopHeader&&(e.headingdata=o.metadataCache.getFileCache(n).headings.slice(1)),e.headingdata.forEach((r,E)=>{let I=o.workspace.getActiveViewOfType(u.MarkdownView);P(I,f,r,E)}),a==null||a.querySelector(".markdown-source-view").insertAdjacentElement("beforebegin",t)};if(this.app.workspace.getActiveViewOfType(u.MarkdownView)){(0,u.requireApiVersion)("0.15.0")?activeDocument=activeWindow.document:activeDocument=window.document;let a=e.app.workspace.getActiveViewOfType(u.MarkdownView);if(a){if((d=a.contentEl)==null?void 0:d.querySelector(".floating-toc-div"))return;{let n=createEl("div");n.addClass("floating-toc-div"),e.settings.isDefaultPin&&n.addClass("pin"),l(a.contentEl,n)}}}}var y=H(require("obsidian"));var R=["left","right"],W={ignoreTopHeader:!1,positionStyle:"left",isLoadOnMobile:!0,isLeft:!1,isDefaultPin:!1};var pe=H(require("obsidian"));var j={};var U={};var G={};var J={};var _={"Floating TOC position":"Floating TOC position","Floating TOC position, default on the left side of the notes":"Floating TOC position, default on the left side of the notes","Ignore top-level headers":"Ignore top-level headers","Select whether to ignore the top-level headings. When turned on, the top-level headings in the current note are not displayed in the floating TOC.":"Select whether to ignore the top-level headings. When turned on, the top-level headings in the current note are not displayed in the floating TOC.","Plugin Settings":"Plugin Settings","Default Pin":"Default Pin","Plugin Style Settings":"Plugin Style Settings","Mobile enabled or not":"Mobile enabled or not","Whether to enable the plugin for the mobile client, the default is enabled.":"Whether to enable the plugin for the mobile client, the default is enabled.","If the floating Toc option is not found in the style setting, please reload the style setting plugin (turn it off and on again)":"If the floating Toc option is not found in the style setting, please reload the style setting plugin (turn it off and on again)","Left Aligned":"Left Aligned","whether it is left or right aligned When the floating toc is on the right":"whether it is left or right aligned When the floating toc is on the right"};var K={};var Y={};var $={};var Q={};var X={};var Z={};var ee={};var te={};var ne={};var ie={};var oe={};var ae={};var le={};var se={};var re={};var de={};var ce={"Floating TOC position":"\u6D6E\u52A8\u76EE\u5F55\u663E\u793A\u4F4D\u7F6E","Floating TOC position, default on the left side of the notes":"\u6D6E\u52A8\u76EE\u5F55\u663E\u793A\u4F4D\u7F6E\uFF0C\u9ED8\u8BA4\u663E\u793A\u5728\u7B14\u8BB0\u5DE6\u4FA7","Ignore top-level headers":"\u662F\u5426\u5FFD\u7565\u9876\u7EA7\u76EE\u5F55","Select whether to ignore the top-level headings. When turned on, the top-level headings in the current note are not displayed in the floating TOC.":"\u9009\u62E9\u662F\u5426\u5FFD\u7565\u9876\u7EA7\u6807\u9898\uFF0C\u5F00\u542F\u540E\u5F53\u524D\u6587\u6863\u4E2D\u6700\u9876\u7EA7\u7684\u6807\u9898\u4E0D\u663E\u793A\u5728\u6D6E\u52A8\u76EE\u5F55\u4E2D\u3002","Plugin Settings":"\u63D2\u4EF6\u8BBE\u7F6E","Default Pin":"\u662F\u5426\u9ED8\u8BA4\u9489\u5728\u7B14\u8BB0\u4E0A","Plugin Style Settings":"\u63D2\u4EF6\u6837\u5F0F\u8BBE\u7F6E","Mobile enabled or not":"\u662F\u5426\u5728\u79FB\u52A8\u7AEF\u542F\u7528","Whether to enable the plugin for the mobile client, the default is enabled.":"\u79FB\u52A8\u5BA2\u6237\u7AEF\u662F\u5426\u542F\u7528\u63D2\u4EF6\uFF0C\u9ED8\u8BA4\u542F\u7528\u3002","If the floating Toc option is not found in the style setting, please reload the style setting plugin (turn it off and on again)":"\u5982\u679Cstyle setting \u4E2D\u65E0\u6CD5\u770B\u5230 floating Toc\u9009\u9879\uFF0C\u8BF7\u91CD\u8F7Dstyle setting\u63D2\u4EF6\uFF08\u5173\u95ED\u518D\u5F00\u542F\u5373\u53EF\uFF09","Left Aligned":"\u5DE6\u5BF9\u9F50","whether it is left or right aligned When the floating toc is on the right":"\u5F53\u5DE5\u5177\u680F\u5728\u53F3\u4FA7\u65F6\uFF0C\u662F\u5426\u5DE6\u5BF9\u9F50"};var ge={};var xe={ar:j,cs:U,da:G,de:J,en:_,"en-gb":K,es:Y,fr:$,hi:Q,id:X,it:Z,ja:ee,ko:te,nl:ne,nn:ie,pl:oe,pt:ae,"pt-br":le,ro:se,ru:re,tr:de,"zh-cn":ce,"zh-tw":ge},he=xe[pe.moment.locale()];function b(o){return he&&he[o]||_[o]}var q=class extends y.PluginSettingTab{constructor(e,l){super(e,l);this.plugin=l,addEventListener("refresh-toc",()=>{D(),F(e,this.plugin)})}display(){let{containerEl:e}=this;e.empty(),e.createEl("h1",{text:"Obsidian Floating TOC "}),e.createEl("span",{text:""}).createEl("a",{text:"Author: Cuman \u2728",href:"https://github.com/cumany"}),e.createEl("span",{text:""}).createEl("a",{text:"Readme:\u4E2D\u6587",href:"https://github.com/cumany/obsidian-floating-toc-plugin/blob/master/README-zh_cn.md"}),e.createEl("span",{text:""}).createEl("a",{text:"|English  ",href:"https://github.com/cumany/obsidian-floating-toc-plugin/blob/master/README.md"}),e.createEl("p",{text:"\u{1F511}TIPS: "}).createEl("p",{text:"ctrl + click on the floating toc to collapse/expand the header."}),e.createEl("h2",{text:b("Plugin Settings")}),new y.Setting(e).setName(b("Floating TOC position")).setDesc(b("Floating TOC position, default on the left side of the notes")).addDropdown(t=>{let n={};R.map(i=>n[i]=i),t.addOptions(n),t.setValue(this.plugin.settings.positionStyle).onChange(i=>{this.plugin.settings.positionStyle=i,this.plugin.saveSettings(),setTimeout(()=>{this.display(),dispatchEvent(new Event("refresh-toc"))},100)})}),this.plugin.settings.positionStyle=="right"&&new y.Setting(e).setName(b("Left Aligned")).setDesc(b("whether it is left or right aligned When the floating toc is on the right")).addToggle(t=>{var n;return t.setValue((n=this.plugin.settings)==null?void 0:n.isLeft).onChange(i=>{this.plugin.settings.isLeft=i,this.plugin.saveSettings(),setTimeout(()=>{this.display(),dispatchEvent(new Event("refresh-toc"))},100)})}),new y.Setting(e).setName(b("Mobile enabled or not")).setDesc(b("Whether to enable the plugin for the mobile client, the default is enabled.")).addToggle(t=>{var n;return t.setValue((n=this.plugin.settings)==null?void 0:n.isLoadOnMobile).onChange(i=>{this.plugin.settings.isLoadOnMobile=i,this.plugin.saveSettings(),setTimeout(()=>{dispatchEvent(new Event("refresh-toc"))},100)})}),new y.Setting(e).setName(b("Ignore top-level headers")).setDesc(b("Select whether to ignore the top-level headings. When turned on, the top-level headings in the current note are not displayed in the floating TOC.")).addToggle(t=>{var n;return t.setValue((n=this.plugin.settings)==null?void 0:n.ignoreTopHeader).onChange(i=>{this.plugin.settings.ignoreTopHeader=i,this.plugin.saveSettings(),setTimeout(()=>{dispatchEvent(new Event("refresh-toc"))},100)})}),new y.Setting(e).setName(b("Default Pin")).addToggle(t=>{var n;return t.setValue((n=this.plugin.settings)==null?void 0:n.isDefaultPin).onChange(i=>{this.plugin.settings.isDefaultPin=i,this.plugin.saveSettings(),setTimeout(()=>{dispatchEvent(new Event("refresh-toc"))},100)})}),e.createEl("h2",{text:b("Plugin Style Settings")}),app.plugins.enabledPlugins.has("obsidian-style-settings")?(e.createEl("p",{text:"\u{1F514}Notice: "}).createEl("p",{text:b("If the floating Toc option is not found in the style setting, please reload the style setting plugin (turn it off and on again)")}),new y.ButtonComponent(e).setIcon("palette").setClass("tiny").setButtonText("\u{1F3A8} Open style settings").onClick(()=>{app.setting.open(),setTimeout(()=>app.setting.openTabById("obsidian-style-settings"),300)})):e.createEl("span",{text:""}).createEl("a",{text:"Please install or enable the style-settings plugin",href:"obsidian://show-plugin?id=obsidian-style-settings"});let c=e.createEl("div",{cls:"cDonationSection"}),d=createEl("p"),a=createEl("p");a.appendText("If you like this Plugin and are considering donating to support continued development, use the button below!"),d.setAttribute("style","color: var(--text-muted)"),c.appendChild(a),c.appendChild(d),c.appendChild(Le("https://github.com/cumany#thank-you-very-much-for-your-support"))}},Le=o=>{let e=createEl("a");return e.setAttribute("href",o),e.addClass("buymeacoffee-img"),e.innerHTML='<img src="https://img.buymeacoffee.com/button-api/?text=Buy me a coffee &emoji=&slug=Cuman&button_colour=BD5FFF&font_colour=ffffff&font_family=Poppins&outline_colour=000000&coffee_colour=FFDD00" />',e};var C,x=0;function D(){(0,h.requireApiVersion)("0.15.0")?C=activeWindow.document:C=window.document,C.querySelectorAll(".floating-toc-div").forEach(e=>{e&&e.remove()})}function fe(o,e){var c;(0,h.requireApiVersion)("0.15.0")?C=activeWindow.document:C=window.document;let l=(c=e.contentEl)==null?void 0:c.querySelector(".floating-toc-div");if(l){let d=l.querySelector("ul.floating-toc");d||(d=l.createEl("ul"),d.addClass("floating-toc"));let a=l==null?void 0:l.querySelectorAll("li.heading-list-item"),t=o.headingdata;return t?(a.length>=t.length?a==null||a.forEach((n,i)=>{var s;if(t[i]){if(t[i].level==n.getAttribute("data-level")&&t[i].heading==n.children[0].innerText&&t[i].position.start.line==n.getAttribute("data-line"))return;n.setAttribute("data-level",t[i].level.toString()),n.setAttribute("data-id",i.toString()),n.setAttribute("data-line",t[i].position.start.line.toString()),(s=n.children[0].querySelector("a"))==null||s.remove(),O(e,t[i].heading,n.children[0],e.file.path,null)}else n.remove()}):t==null||t.forEach((n,i)=>{var s;if(i<=a.length-1){if(n.level.toString()==a[i].getAttribute("data-level")&&n.heading==a[i].children[0].innerText&&n.position.start.line.toString()==a[i].getAttribute("data-line"))return;a[i].setAttribute("data-level",n.level.toString()),a[i].setAttribute("data-id",i.toString()),a[i].setAttribute("data-line",n.position.start.line.toString()),(s=a[i].children[0].querySelector("a"))==null||s.remove(),O(e,n.heading,a[i].children[0],e.file.path,null)}else P(e,d,n,i)}),!0):(d.remove(),!1)}else return!1}function ue(o){for(var e=[];o=o.previousElementSibling;)o.nodeType==1&&e.push(o);return e}function Ae(o,e,l){var d,a,t,n,i,s;let c=l.target;if(((d=c.parentElement)==null?void 0:d.classList.contains("cm-editor"))||((a=c.parentElement)==null?void 0:a.classList.contains("markdown-reading-view"))){let f=o.workspace.getActiveViewOfType(h.MarkdownView),p,g={};if(f){p=(t=f.currentMode.getScroll())!=null?t:0;let v=e.headingdata,T=(n=v==null?void 0:v.length)!=null?n:0,r=f.contentEl.querySelector(".floating-toc");if(r){let E=parseInt((i=r.querySelector("li.heading-list-item"))==null?void 0:i.getAttribute("data-line")),I=parseInt((s=r.lastElementChild)==null?void 0:s.getAttribute("data-line"));if(p<=0){let L=r.querySelector(".heading-list-item.located");L&&L.removeClass("located");let m=r==null?void 0:r.querySelector(`li[data-line='${E}']`);m&&m.addClass("located");let S=parseInt(m==null?void 0:m.getAttribute("data-level"));S=S>1?S-1:1;let V=ue(m),A=r==null?void 0:r.querySelector("li.focus");A&&A.removeClass("focus"),V.some(B=>{if(B.dataset.level<=S.toString())return B.addClass("focus"),!0});let M=r.querySelector(".heading-list-item");setTimeout(()=>M.scrollIntoViewIfNeeded(),300)}else{for(;--T>=0;)if(v[T].position.start.line<=p){g=v[T],x=v[T].position.start.line;break}if(!g)return;let L=r.querySelector(".heading-list-item.located");L&&L.removeClass("located"),!x&&r&&(x=E);let m=r==null?void 0:r.querySelector(`li[data-line='${x}']`);if(m){if(x==I||x==E)m.addClass("located");else if(m.nextElementSibling){m.nextElementSibling.addClass("located");let S=parseInt(m.nextElementSibling.getAttribute("data-level"));S=S>1?S-1:1;let V=ue(m.nextElementSibling),A=r==null?void 0:r.querySelector("li.focus");A&&A.removeClass("focus"),V.some(M=>{if(M.dataset.level<=S.toString())return M.addClass("focus"),!0})}m.scrollIntoViewIfNeeded()}}}}}}var N=class extends h.Plugin{constructor(){super(...arguments);this.handleScroll=(e,l,c)=>(0,h.debounce)(Ae(e,l,c),200)}onload(){return w(this,null,function*(){(0,h.requireApiVersion)("0.15.0")?C=activeWindow.document:C=window.document,yield this.loadSettings();let e=a=>{a&&(fe(this,a)||F(app,this))},l=this.settings.isLoadOnMobile;if(h.Platform.isMobileApp&&l){console.log("floating toc disable loading on mobile");return}this.addCommand({id:"pin-toc-panel",name:"Pinning the Floating TOC panel",icon:"pin",callback:()=>w(this,null,function*(){let a=this.app.workspace.getActiveViewOfType(h.MarkdownView);if(a){let t=a.contentEl.querySelector(".floating-toc-div");t&&(t.classList.contains("pin")?t.removeClass("pin"):t.addClass("pin"))}})}),this.registerEvent(this.app.workspace.on("active-leaf-change",()=>{let a=this.app.workspace.getActiveViewOfType(h.MarkdownView);if(a){let t=this.app.workspace.getActiveFile(),n=this.app.metadataCache.getFileCache(t).headings,i=[];n==null||n.map(s=>{s.heading=s.heading.replace(/<\/?[\s\S]*?(?:".*")*>/g,""),i.push(s)}),this.headingdata=i,this.settings.ignoreTopHeader&&(this.headingdata=n.slice(1)),d(a)}})),this.registerEvent(this.app.metadataCache.on("changed",()=>{var t;let a=this.app.workspace.getActiveViewOfType(h.MarkdownView);if(a){let n=a.file,i=this.app.metadataCache.getFileCache(n).headings,s=[];i==null||i.map(g=>{g.heading=g.heading.replace(/<\/?[\s\S]*?(?:".*")*>/g,""),s.push(g)});let f=s==null?void 0:s.map(g=>g.level+g.heading+g.position.start.line),p=(t=this.headingdata)==null?void 0:t.map(g=>g.level+g.heading+g.position.start.line);if(JSON.stringify(p)==JSON.stringify(f))return;this.headingdata=s,this.settings.ignoreTopHeader&&(this.headingdata=s.slice(1)),d(a)}}));let c=a=>{e(a)},d=a=>(0,h.debounce)(c(a),300,!0);C.addEventListener("scroll",a=>{this.handleScroll(this.app,this,a)},!0),this.addSettingTab(new q(this.app,this)),e(this.app.workspace.getActiveViewOfType(h.MarkdownView)),(0,h.requireApiVersion)("0.15.0")&&this.app.workspace.on("window-open",a=>{a.doc.addEventListener("scroll",t=>{this.handleScroll(this.app,this,t)},!0)}),app.workspace.onLayoutReady(()=>{app.workspace.trigger("parse-style-settings")})})}onunload(){(0,h.requireApiVersion)("0.15.0")?C=activeWindow.document:C=window.document,C.removeEventListener("scroll",e=>{this.handleScroll(this.app,this,e)},!0),D()}setHeadingdata(e){this.headingdata=e}loadSettings(){return w(this,null,function*(){this.settings=Object.assign({},W,yield this.loadData())})}saveSettings(){return w(this,null,function*(){yield this.saveData(this.settings)})}};
//# sourceMappingURL=data:application/json;base64,
